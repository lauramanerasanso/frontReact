{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport $ from 'jquery';\nimport Util from './util';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel';\nconst VERSION = '4.6.0';\nconst DATA_KEY = 'bs.carousel';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst DATA_API_KEY = '.data-api';\nconst JQUERY_NO_CONFLICT = $.fn[NAME];\nconst ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n\nconst ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\nconst TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\nconst SWIPE_THRESHOLD = 40;\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n};\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n};\nconst DIRECTION_NEXT = 'next';\nconst DIRECTION_PREV = 'prev';\nconst DIRECTION_LEFT = 'left';\nconst DIRECTION_RIGHT = 'right';\nconst EVENT_SLIDE = `slide${EVENT_KEY}`;\nconst EVENT_SLID = `slid${EVENT_KEY}`;\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`;\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`;\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`;\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`;\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`;\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`;\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`;\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`;\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`;\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`;\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\nconst CLASS_NAME_CAROUSEL = 'carousel';\nconst CLASS_NAME_ACTIVE = 'active';\nconst CLASS_NAME_SLIDE = 'slide';\nconst CLASS_NAME_RIGHT = 'carousel-item-right';\nconst CLASS_NAME_LEFT = 'carousel-item-left';\nconst CLASS_NAME_NEXT = 'carousel-item-next';\nconst CLASS_NAME_PREV = 'carousel-item-prev';\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst SELECTOR_ACTIVE = '.active';\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item';\nconst SELECTOR_ITEM = '.carousel-item';\nconst SELECTOR_ITEM_IMG = '.carousel-item img';\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';\nconst SELECTOR_INDICATORS = '.carousel-indicators';\nconst SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';\nconst SELECTOR_DATA_RIDE = '[data-ride=\"carousel\"]';\nconst PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen'\n};\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Carousel {\n  constructor(element, config) {\n    this._items = null;\n    this._interval = null;\n    this._activeElement = null;\n    this._isPaused = false;\n    this._isSliding = false;\n    this.touchTimeout = null;\n    this.touchStartX = 0;\n    this.touchDeltaX = 0;\n    this._config = this._getConfig(config);\n    this._element = element;\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS);\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);\n\n    this._addEventListeners();\n  } // Getters\n\n\n  static get VERSION() {\n    return VERSION;\n  }\n\n  static get Default() {\n    return Default;\n  } // Public\n\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_NEXT);\n    }\n  }\n\n  nextWhenVisible() {\n    const $element = $(this._element); // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n\n    if (!document.hidden && $element.is(':visible') && $element.css('visibility') !== 'hidden') {\n      this.next();\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_PREV);\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true;\n    }\n\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element);\n      this.cycle(true);\n    }\n\n    clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false;\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._updateInterval();\n\n      this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);\n\n    const activeIndex = this._getItemIndex(this._activeElement);\n\n    if (index > this._items.length - 1 || index < 0) {\n      return;\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(EVENT_SLID, () => this.to(index));\n      return;\n    }\n\n    if (activeIndex === index) {\n      this.pause();\n      this.cycle();\n      return;\n    }\n\n    const direction = index > activeIndex ? DIRECTION_NEXT : DIRECTION_PREV;\n\n    this._slide(direction, this._items[index]);\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY);\n    $.removeData(this._element, DATA_KEY);\n    this._items = null;\n    this._config = null;\n    this._element = null;\n    this._interval = null;\n    this._isPaused = null;\n    this._isSliding = null;\n    this._activeElement = null;\n    this._indicatorsElement = null;\n  } // Private\n\n\n  _getConfig(config) {\n    config = { ...Default,\n      ...config\n    };\n    Util.typeCheckConfig(NAME, config, DefaultType);\n    return config;\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX);\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return;\n    }\n\n    const direction = absDeltax / this.touchDeltaX;\n    this.touchDeltaX = 0; // swipe left\n\n    if (direction > 0) {\n      this.prev();\n    } // swipe right\n\n\n    if (direction < 0) {\n      this.next();\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element).on(EVENT_KEYDOWN, event => this._keydown(event));\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element).on(EVENT_MOUSEENTER, event => this.pause(event)).on(EVENT_MOUSELEAVE, event => this.cycle(event));\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners();\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return;\n    }\n\n    const start = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX;\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX;\n      }\n    };\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0;\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX;\n      }\n    };\n\n    const end = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX;\n      }\n\n      this._handleSwipe();\n\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n        this.pause();\n\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout);\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n      }\n    };\n\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START, e => e.preventDefault());\n\n    if (this._pointerEvent) {\n      $(this._element).on(EVENT_POINTERDOWN, event => start(event));\n      $(this._element).on(EVENT_POINTERUP, event => end(event));\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n    } else {\n      $(this._element).on(EVENT_TOUCHSTART, event => start(event));\n      $(this._element).on(EVENT_TOUCHMOVE, event => move(event));\n      $(this._element).on(EVENT_TOUCHEND, event => end(event));\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return;\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault();\n        this.prev();\n        break;\n\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault();\n        this.next();\n        break;\n\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) : [];\n    return this._items.indexOf(element);\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === DIRECTION_NEXT;\n    const isPrevDirection = direction === DIRECTION_PREV;\n\n    const activeIndex = this._getItemIndex(activeElement);\n\n    const lastItemIndex = this._items.length - 1;\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement;\n    }\n\n    const delta = direction === DIRECTION_PREV ? -1 : 1;\n    const itemIndex = (activeIndex + delta) % this._items.length;\n    return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget);\n\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));\n\n    const slideEvent = $.Event(EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    });\n    $(this._element).trigger(slideEvent);\n    return slideEvent;\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE));\n      $(indicators).removeClass(CLASS_NAME_ACTIVE);\n\n      const nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE);\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || this._element.querySelector(SELECTOR_ACTIVE_ITEM);\n\n    if (!element) {\n      return;\n    }\n\n    const elementInterval = parseInt(element.getAttribute('data-interval'), 10);\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval;\n      this._config.interval = elementInterval;\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval;\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);\n\n    const activeElementIndex = this._getItemIndex(activeElement);\n\n    const nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n    const nextElementIndex = this._getItemIndex(nextElement);\n\n    const isCycling = Boolean(this._interval);\n    let directionalClassName;\n    let orderClassName;\n    let eventDirectionName;\n\n    if (direction === DIRECTION_NEXT) {\n      directionalClassName = CLASS_NAME_LEFT;\n      orderClassName = CLASS_NAME_NEXT;\n      eventDirectionName = DIRECTION_LEFT;\n    } else {\n      directionalClassName = CLASS_NAME_RIGHT;\n      orderClassName = CLASS_NAME_PREV;\n      eventDirectionName = DIRECTION_RIGHT;\n    }\n\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false;\n      return;\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n\n    if (slideEvent.isDefaultPrevented()) {\n      return;\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return;\n    }\n\n    this._isSliding = true;\n\n    if (isCycling) {\n      this.pause();\n    }\n\n    this._setActiveIndicatorElement(nextElement);\n\n    this._activeElement = nextElement;\n    const slidEvent = $.Event(EVENT_SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    });\n\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\n      $(nextElement).addClass(orderClassName);\n      Util.reflow(nextElement);\n      $(activeElement).addClass(directionalClassName);\n      $(nextElement).addClass(directionalClassName);\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n      $(activeElement).one(Util.TRANSITION_END, () => {\n        $(nextElement).removeClass(`${directionalClassName} ${orderClassName}`).addClass(CLASS_NAME_ACTIVE);\n        $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`);\n        this._isSliding = false;\n        setTimeout(() => $(this._element).trigger(slidEvent), 0);\n      }).emulateTransitionEnd(transitionDuration);\n    } else {\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE);\n      $(nextElement).addClass(CLASS_NAME_ACTIVE);\n      this._isSliding = false;\n      $(this._element).trigger(slidEvent);\n    }\n\n    if (isCycling) {\n      this.cycle();\n    }\n  } // Static\n\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY);\n      let _config = { ...Default,\n        ...$(this).data()\n      };\n\n      if (typeof config === 'object') {\n        _config = { ..._config,\n          ...config\n        };\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide;\n\n      if (!data) {\n        data = new Carousel(this, _config);\n        $(this).data(DATA_KEY, data);\n      }\n\n      if (typeof config === 'number') {\n        data.to(config);\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`);\n        }\n\n        data[action]();\n      } else if (_config.interval && _config.ride) {\n        data.pause();\n        data.cycle();\n      }\n    });\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this);\n\n    if (!selector) {\n      return;\n    }\n\n    const target = $(selector)[0];\n\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\n      return;\n    }\n\n    const config = { ...$(target).data(),\n      ...$(this).data()\n    };\n    const slideIndex = this.getAttribute('data-slide-to');\n\n    if (slideIndex) {\n      config.interval = false;\n    }\n\n    Carousel._jQueryInterface.call($(target), config);\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex);\n    }\n\n    event.preventDefault();\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler);\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));\n\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i]);\n\n    Carousel._jQueryInterface.call($carousel, $carousel.data());\n  }\n});\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface;\n$.fn[NAME].Constructor = Carousel;\n\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT;\n  return Carousel._jQueryInterface;\n};\n\nexport default Carousel;","map":{"version":3,"sources":["/Users/lauramanerasanso/.bitnami/stackman/machines/xampp/volumes/root/htdocs/DAW/frontLloguer/frontlloguer/node_modules/bootstrap/js/src/carousel.js"],"names":["$","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","TOUCHEVENT_COMPAT_WAIT","SWIPE_THRESHOLD","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","DIRECTION_NEXT","DIRECTION_PREV","DIRECTION_LEFT","DIRECTION_RIGHT","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","EVENT_DRAG_START","EVENT_LOAD_DATA_API","EVENT_CLICK_DATA_API","CLASS_NAME_CAROUSEL","CLASS_NAME_ACTIVE","CLASS_NAME_SLIDE","CLASS_NAME_RIGHT","CLASS_NAME_LEFT","CLASS_NAME_NEXT","CLASS_NAME_PREV","CLASS_NAME_POINTER_EVENT","SELECTOR_ACTIVE","SELECTOR_ACTIVE_ITEM","SELECTOR_ITEM","SELECTOR_ITEM_IMG","SELECTOR_NEXT_PREV","SELECTOR_INDICATORS","SELECTOR_DATA_SLIDE","SELECTOR_DATA_RIDE","PointerType","TOUCH","PEN","Carousel","constructor","element","config","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_element","_indicatorsElement","querySelector","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","MSPointerEvent","_addEventListeners","next","_slide","nextWhenVisible","$element","hidden","is","css","prev","event","triggerTransitionEnd","cycle","clearInterval","_updateInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","length","one","direction","dispose","off","removeData","typeCheckConfig","_handleSwipe","absDeltax","Math","abs","on","_keydown","_addTouchEventListeners","start","originalEvent","pointerType","toUpperCase","clientX","touches","move","end","clearTimeout","setTimeout","querySelectorAll","e","preventDefault","classList","add","test","target","tagName","which","parentNode","slice","call","indexOf","_getItemByDirection","activeElement","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","Event","from","trigger","_setActiveIndicatorElement","indicators","removeClass","nextIndicator","children","addClass","elementInterval","parseInt","getAttribute","defaultInterval","activeElementIndex","nextElement","nextElementIndex","isCycling","directionalClassName","orderClassName","hasClass","isDefaultPrevented","slidEvent","reflow","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","emulateTransitionEnd","_jQueryInterface","each","data","action","TypeError","ride","_dataApiClickHandler","selector","getSelectorFromElement","slideIndex","carousels","i","len","$carousel","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\nconst ARROW_LEFT_KEYCODE = 37 // KeyboardEvent.which value for left arrow key\nconst ARROW_RIGHT_KEYCODE = 39 // KeyboardEvent.which value for right arrow key\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n}\n\nconst DIRECTION_NEXT = 'next'\nconst DIRECTION_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_RIGHT = 'carousel-item-right'\nconst CLASS_NAME_LEFT = 'carousel-item-left'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-ride=\"carousel\"]'\n\nconst PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel {\n  constructor(element, config) {\n    this._items = null\n    this._interval = null\n    this._activeElement = null\n    this._isPaused = false\n    this._isSliding = false\n    this.touchTimeout = null\n    this.touchStartX = 0\n    this.touchDeltaX = 0\n\n    this._config = this._getConfig(config)\n    this._element = element\n    this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS)\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_NEXT)\n    }\n  }\n\n  nextWhenVisible() {\n    const $element = $(this._element)\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden &&\n      ($element.is(':visible') && $element.css('visibility') !== 'hidden')) {\n      this.next()\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(DIRECTION_PREV)\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\n      Util.triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config.interval && !this._isPaused) {\n      this._updateInterval()\n\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      $(this._element).one(EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const direction = index > activeIndex ?\n      DIRECTION_NEXT :\n      DIRECTION_PREV\n\n    this._slide(direction, this._items[index])\n  }\n\n  dispose() {\n    $(this._element).off(EVENT_KEY)\n    $.removeData(this._element, DATA_KEY)\n\n    this._items = null\n    this._config = null\n    this._element = null\n    this._interval = null\n    this._isPaused = null\n    this._isSliding = null\n    this._activeElement = null\n    this._indicatorsElement = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    // swipe left\n    if (direction > 0) {\n      this.prev()\n    }\n\n    // swipe right\n    if (direction < 0) {\n      this.next()\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      $(this._element).on(EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      $(this._element)\n        .on(EVENT_MOUSEENTER, event => this.pause(event))\n        .on(EVENT_MOUSELEAVE, event => this.cycle(event))\n    }\n\n    if (this._config.touch) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    if (!this._touchSupported) {\n      return\n    }\n\n    const start = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchStartX = event.originalEvent.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.originalEvent.touches[0].clientX\n      }\n    }\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n        this.touchDeltaX = 0\n      } else {\n        this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX\n      }\n    }\n\n    const end = event => {\n      if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.originalEvent.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    $(this._element.querySelectorAll(SELECTOR_ITEM_IMG))\n      .on(EVENT_DRAG_START, e => e.preventDefault())\n\n    if (this._pointerEvent) {\n      $(this._element).on(EVENT_POINTERDOWN, event => start(event))\n      $(this._element).on(EVENT_POINTERUP, event => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      $(this._element).on(EVENT_TOUCHSTART, event => start(event))\n      $(this._element).on(EVENT_TOUCHMOVE, event => move(event))\n      $(this._element).on(EVENT_TOUCHEND, event => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    switch (event.which) {\n      case ARROW_LEFT_KEYCODE:\n        event.preventDefault()\n        this.prev()\n        break\n      case ARROW_RIGHT_KEYCODE:\n        event.preventDefault()\n        this.next()\n        break\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ?\n      [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) :\n      []\n    return this._items.indexOf(element)\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === DIRECTION_NEXT\n    const isPrevDirection = direction === DIRECTION_PREV\n    const activeIndex = this._getItemIndex(activeElement)\n    const lastItemIndex = this._items.length - 1\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 ||\n                            isNextDirection && activeIndex === lastItemIndex\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement\n    }\n\n    const delta = direction === DIRECTION_PREV ? -1 : 1\n    const itemIndex = (activeIndex + delta) % this._items.length\n\n    return itemIndex === -1 ?\n      this._items[this._items.length - 1] : this._items[itemIndex]\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM))\n    const slideEvent = $.Event(EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n\n    $(this._element).trigger(slideEvent)\n\n    return slideEvent\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE))\n      $(indicators).removeClass(CLASS_NAME_ACTIVE)\n\n      const nextIndicator = this._indicatorsElement.children[\n        this._getItemIndex(element)\n      ]\n\n      if (nextIndicator) {\n        $(nextIndicator).addClass(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = parseInt(element.getAttribute('data-interval'), 10)\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n      this._config.interval = elementInterval\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement = element || activeElement &&\n      this._getItemByDirection(direction, activeElement)\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    let directionalClassName\n    let orderClassName\n    let eventDirectionName\n\n    if (direction === DIRECTION_NEXT) {\n      directionalClassName = CLASS_NAME_LEFT\n      orderClassName = CLASS_NAME_NEXT\n      eventDirectionName = DIRECTION_LEFT\n    } else {\n      directionalClassName = CLASS_NAME_RIGHT\n      orderClassName = CLASS_NAME_PREV\n      eventDirectionName = DIRECTION_RIGHT\n    }\n\n    if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n    this._activeElement = nextElement\n\n    const slidEvent = $.Event(EVENT_SLID, {\n      relatedTarget: nextElement,\n      direction: eventDirectionName,\n      from: activeElementIndex,\n      to: nextElementIndex\n    })\n\n    if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\n      $(nextElement).addClass(orderClassName)\n\n      Util.reflow(nextElement)\n\n      $(activeElement).addClass(directionalClassName)\n      $(nextElement).addClass(directionalClassName)\n\n      const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n      $(activeElement)\n        .one(Util.TRANSITION_END, () => {\n          $(nextElement)\n            .removeClass(`${directionalClassName} ${orderClassName}`)\n            .addClass(CLASS_NAME_ACTIVE)\n\n          $(activeElement).removeClass(`${CLASS_NAME_ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n          this._isSliding = false\n\n          setTimeout(() => $(this._element).trigger(slidEvent), 0)\n        })\n        .emulateTransitionEnd(transitionDuration)\n    } else {\n      $(activeElement).removeClass(CLASS_NAME_ACTIVE)\n      $(nextElement).addClass(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      $(this._element).trigger(slidEvent)\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      let _config = {\n        ...Default,\n        ...$(this).data()\n      }\n\n      if (typeof config === 'object') {\n        _config = {\n          ..._config,\n          ...config\n        }\n      }\n\n      const action = typeof config === 'string' ? config : _config.slide\n\n      if (!data) {\n        data = new Carousel(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'number') {\n        data.to(config)\n      } else if (typeof action === 'string') {\n        if (typeof data[action] === 'undefined') {\n          throw new TypeError(`No method named \"${action}\"`)\n        }\n\n        data[action]()\n      } else if (_config.interval && _config.ride) {\n        data.pause()\n        data.cycle()\n      }\n    })\n  }\n\n  static _dataApiClickHandler(event) {\n    const selector = Util.getSelectorFromElement(this)\n\n    if (!selector) {\n      return\n    }\n\n    const target = $(selector)[0]\n\n    if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...$(target).data(),\n      ...$(this).data()\n    }\n    const slideIndex = this.getAttribute('data-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel._jQueryInterface.call($(target), config)\n\n    if (slideIndex) {\n      $(target).data(DATA_KEY).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler)\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  const carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE))\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    const $carousel = $(carousels[i])\n    Carousel._jQueryInterface.call($carousel, $carousel.data())\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Carousel._jQueryInterface\n$.fn[NAME].Constructor = Carousel\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Carousel._jQueryInterface\n}\n\nexport default Carousel\n"]},"metadata":{},"sourceType":"module"}